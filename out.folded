thread_perf;<T as core::convert::Into<U>>::into;<core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from 1
thread_perf;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate 1
thread_perf;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr 1
thread_perf;<alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut;alloc::vec::Vec<T,A>::as_mut_ptr 1
thread_perf;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut 1
thread_perf;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut;core::slice::<impl [T]>::len 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}} 16
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;alloc::string::String::new 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;alloc::string::String::new;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::ArgumentV1::new 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;[thread_perf] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;__memcpy_avx_unaligned 9
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;__memcpy_avx_unaligned;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write 9
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::as_mut_ptr;alloc::raw_vec::RawVec<T,A>::ptr 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::as_mut_ptr;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k];rcu_core_si_[k];rcu_core_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::as_mut_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::as_mut_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null;core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized 10
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;<core::result::Result<T,E> as core::ops::try::Try>::into_result 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;<core::result::Result<T,E> as core::ops::try::Try>::into_result;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::current_memory 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::current_memory;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;alloc::raw_vec::RawVec<T,A>::capacity_from_bytes 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<T>::as_ptr 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<T>::cast 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<T>::cast;core::ptr::non_null::NonNull<T>::as_ptr 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<T>::cast;core::ptr::non_null::NonNull<T>::new_unchecked 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<[T]>::len 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<[T]>::len;core::ptr::non_null::NonNull<T>::as_ptr 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::unique::Unique<T>::new_unchecked;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;<core::result::Result<T,E> as core::ops::try::Try>::into_result 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc;__GI___libc_malloc 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc;__GI___libc_malloc;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc;__GI___libc_malloc;tcache_get 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc;__rdl_alloc 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc;core::alloc::layout::Layout::align 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc;core::alloc::layout::Layout::size 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::alloc::layout::Layout::size 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::option::Option<T>::ok_or 9
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<T>::new 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<T>::new;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<T>::new;core::ptr::mut_ptr::<impl *mut T>::is_null;core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<T>::new;core::ptr::non_null::NonNull<T>::new_unchecked 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts;core::ptr::non_null::NonNull<T>::new_unchecked 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<core::result::Result<T,E> as core::ops::try::Try>::into_result 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;alloc::raw_vec::alloc_guard 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;core::alloc::layout::Layout::size 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;core::result::Result<T,E>::map_err 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;<core::result::Result<T,E> as core::ops::try::Try>::into_result 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;<core::result::Result<T,E> as core::ops::try::Try>::into_result;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::new 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::new;core::alloc::layout::Layout::from_size_align_unchecked 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::new;core::alloc::layout::Layout::from_size_align_unchecked;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::new;core::alloc::layout::Layout::from_size_align_unchecked;core::num::nonzero::NonZeroUsize::new_unchecked 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::new;core::alloc::layout::size_align 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::new;core::alloc::layout::size_align;core::mem::align_of 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::align 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::align;core::num::nonzero::NonZeroUsize::get 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::from_size_align 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::from_size_align;core::alloc::layout::Layout::from_size_align_unchecked 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::from_size_align;core::num::<impl usize>::is_power_of_two 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::from_size_align;core::num::<impl usize>::is_power_of_two;core::num::<impl usize>::count_ones 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::padding_needed_for 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::padding_needed_for;core::num::<impl usize>::wrapping_add 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::padding_needed_for;core::num::<impl usize>::wrapping_sub 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::result::Result<T,E>::unwrap 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;<core::result::Result<T,E> as core::ops::try::Try>::into_result 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::align;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::from_size_align_unchecked 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::from_size_align_unchecked;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::padding_needed_for 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::padding_needed_for;core::num::<impl usize>::wrapping_sub 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::size 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::num::<impl usize>::checked_mul 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::num::<impl usize>::checked_mul;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::num::<impl usize>::checked_mul;core::num::<impl usize>::overflowing_mul 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::option::Option<T>::ok_or 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max;core::cmp::Ord::max 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max;core::cmp::Ord::max;core::cmp::max_by 12
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max;core::cmp::Ord::max;core::cmp::max_by;core::ops::function::FnOnce::call_once 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max;core::cmp::Ord::max;core::cmp::max_by;core::ops::function::FnOnce::call_once;core::cmp::impls::<impl core::cmp::Ord for usize>::cmp 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max;core::cmp::Ord::max;core::cmp::max_by;core::ops::function::FnOnce::call_once;core::cmp::impls::<impl core::cmp::Ord for usize>::cmp;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::num::<impl usize>::checked_add 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::num::<impl usize>::checked_add;core::num::<impl usize>::overflowing_add 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::num::<impl usize>::checked_add;core::num::<impl usize>::overflowing_add;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::needs_to_grow 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::needs_to_grow;alloc::raw_vec::RawVec<T,A>::capacity 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::needs_to_grow;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;core::intrinsics::copy_nonoverlapping;__memcpy_avx_unaligned 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;core::intrinsics::copy_nonoverlapping;__memmove_avx_unaligned_erms 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;core::ptr::mut_ptr::<impl *mut T>::add 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;core::slice::<impl [T]>::len;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;core::slice::iter::Iter<T>::as_slice 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;core::slice::iter::Iter<T>::as_slice;core::slice::iter::Iter<T>::make_slice 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;core::slice::iter::Iter<T>::as_slice;core::slice::iter::Iter<T>::make_slice;core::ptr::non_null::NonNull<T>::as_ptr 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;core::slice::iter::Iter<T>::as_slice;core::slice::iter::Iter<T>::make_slice;core::slice::raw::from_raw_parts 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter;core::slice::iter::Iter<T>::new 9
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter;core::slice::iter::Iter<T>::new;core::ptr::const_ptr::<impl *const T>::is_null 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter;core::slice::iter::Iter<T>::new;core::ptr::const_ptr::<impl *const T>::is_null;core::ptr::const_ptr::<impl *const T>::guaranteed_eq 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter;core::slice::iter::Iter<T>::new;core::ptr::non_null::NonNull<T>::new_unchecked 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter;core::slice::iter::Iter<T>::new;core::slice::<impl [T]>::len 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;core::str::<impl str>::as_bytes 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;core::fmt::Formatter::pad_integral 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;core::fmt::Formatter::pad_integral;core::fmt::Formatter::pad_integral::write_prefix 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&T as core::fmt::Display>::fmt;core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt;core::fmt::num::imp::fmt_u64;core::intrinsics::copy_nonoverlapping 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str 9
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::as_mut_ptr 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::as_mut_ptr;alloc::raw_vec::RawVec<T,A>::ptr 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::as_mut_ptr;alloc::raw_vec::RawVec<T,A>::ptr;core::ptr::unique::Unique<T>::as_ptr 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::as_mut_ptr;alloc::raw_vec::RawVec<T,A>::ptr;core::ptr::unique::Unique<T>::as_ptr;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::as_mut_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::as_mut_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null;core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::as_mut_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null;core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::len 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::len;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::needs_to_grow 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::needs_to_grow;alloc::raw_vec::RawVec<T,A>::capacity 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::handle_reserve 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;core::intrinsics::copy_nonoverlapping 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;core::intrinsics::copy_nonoverlapping;__memcpy_avx_unaligned 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;core::intrinsics::copy_nonoverlapping;__memmove_avx_unaligned_erms 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;core::ptr::mut_ptr::<impl *mut T>::add 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;core::ptr::mut_ptr::<impl *mut T>::add;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;alloc::vec::Vec<T,A>::append_elements;core::ptr::mut_ptr::<impl *mut T>::add;core::ptr::mut_ptr::<impl *mut T>::offset 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;core::slice::iter::Iter<T>::as_slice 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;core::slice::iter::Iter<T>::as_slice;core::slice::iter::Iter<T>::make_slice 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;core::slice::iter::Iter<T>::as_slice;core::slice::iter::Iter<T>::make_slice;core::ptr::non_null::NonNull<T>::as_ptr 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;core::slice::iter::Iter<T>::as_slice;core::slice::iter::Iter<T>::make_slice;core::slice::raw::from_raw_parts;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;<alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend;core::slice::iter::Iter<T>::as_slice;core::slice::iter::Iter<T>::make_slice;core::slice::raw::from_raw_parts;core::ptr::slice_from_raw_parts 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter;core::slice::iter::Iter<T>::new 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter;core::slice::iter::Iter<T>::new;core::ptr::const_ptr::<impl *const T>::add;core::ptr::const_ptr::<impl *const T>::offset 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter;core::slice::iter::Iter<T>::new;core::ptr::const_ptr::<impl *const T>::is_null;core::ptr::const_ptr::<impl *const T>::guaranteed_eq 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter;core::slice::iter::Iter<T>::new;core::ptr::const_ptr::<impl *const T>::is_null;core::ptr::const_ptr::<impl *const T>::guaranteed_eq;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter;core::slice::iter::Iter<T>::new;core::ptr::non_null::NonNull<T>::new_unchecked 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;alloc::vec::Vec<T,A>::extend_from_slice;core::slice::<impl [T]>::iter;core::slice::iter::Iter<T>::new;core::slice::<impl [T]>::len 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<&mut W as core::fmt::Write>::write_str;<alloc::string::String as core::fmt::Write>::write_str;alloc::string::String::push_str;core::str::<impl str>::as_bytes;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;<core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next;<core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::fmt::Write::write_fmt;core::fmt::write;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::result::Result<T,E>::expect 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string;core::result::Result<T,E>::expect;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::string::String as core::ops::deref::Deref>::deref 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::string::String as core::ops::deref::Deref>::deref;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::string::String as core::ops::deref::Deref>::deref;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::string::String as core::ops::deref::Deref>::deref;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr;alloc::raw_vec::RawVec<T,A>::ptr 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::string::String as core::ops::deref::Deref>::deref;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr;alloc::raw_vec::RawVec<T,A>::ptr;core::ptr::unique::Unique<T>::as_ptr 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::string::String as core::ops::deref::Deref>::deref;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::string::String as core::ops::deref::Deref>::deref;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null;core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::string::String as core::ops::deref::Deref>::deref;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::string::String as core::ops::deref::Deref>::deref;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;core::slice::raw::from_raw_parts;core::ptr::slice_from_raw_parts 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::string::String as core::ops::deref::Deref>::deref;core::str::converts::from_utf8_unchecked 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::sync::Arc<T> as core::ops::deref::Deref>::deref 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::sync::Arc<T> as core::ops::deref::Deref>::deref;alloc::sync::Arc<T>::inner;core::ptr::non_null::NonNull<T>::as_ref 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::sync::Arc<T> as core::ops::deref::Deref>::deref;alloc::sync::Arc<T>::inner;core::ptr::non_null::NonNull<T>::as_ref;core::ptr::non_null::NonNull<T>::as_ptr 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::sync::Arc<T> as core::ops::deref::Deref>::deref;alloc::sync::Arc<T>::inner;core::ptr::non_null::NonNull<T>::as_ref;core::ptr::non_null::NonNull<T>::as_ptr;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<alloc::sync::Arc<T> as core::ops::deref::Deref>::deref;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64 212
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k];schedule_[k];__sched_text_start_[k];finish_task_switch_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 11
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k];schedule_[k];__sched_text_start_[k];finish_task_switch_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];__x64_sys_lseek_[k] 13
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];__x64_sys_lseek_[k];asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k] 111
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];__fdget_pos_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];__x86_indirect_thunk_rax_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ext4_llseek_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k];__f_unlock_pos_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k];__fdget_pos_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k];__fdget_pos_[k];__fget_light_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k];__fdget_pos_[k];__fget_light_[k];__fget_files_[k] 20
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k];__fdget_pos_[k];_cond_resched_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k];__fdget_pos_[k];mutex_lock_[k] 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k];__fget_light_[k] 18
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k];ext4_llseek_[k] 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k];ext4_llseek_[k];generic_file_llseek_size_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k];fput_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k];fput_many_[k] 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_lseek_[k];ksys_lseek_[k];mutex_unlock_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;__lseek64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];ksys_lseek_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;std::sys::unix::cvt;<i64 as std::sys::unix::IsMinusOne>::is_minus_one 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;std::sys::unix::cvt;<i64 as std::sys::unix::IsMinusOne>::is_minus_one;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;std::sys::unix::fd::FileDesc::raw 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};<std::fs::File as std::io::Seek>::seek;std::sys::unix::fs::File::seek;std::sys::unix::fd::FileDesc::raw;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::as_bytes 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::as_bytes;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::as_bytes;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::as_bytes;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr;alloc::raw_vec::RawVec<T,A>::ptr 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::as_bytes;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr;alloc::raw_vec::RawVec<T,A>::ptr;core::ptr::unique::Unique<T>::as_ptr 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::as_bytes;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::as_bytes;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null;core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::as_bytes;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;core::slice::raw::from_raw_parts 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::as_bytes;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;core::slice::raw::from_raw_parts;core::ptr::slice_from_raw_parts 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::new 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::new;alloc::vec::Vec<T>::new 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::new;alloc::vec::Vec<T>::new;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};alloc::string::String::new;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String> 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>> 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop;alloc::vec::Vec<T,A>::as_mut_ptr 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop;alloc::vec::Vec<T,A>::as_mut_ptr;alloc::raw_vec::RawVec<T,A>::ptr 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop;alloc::vec::Vec<T,A>::as_mut_ptr;alloc::raw_vec::RawVec<T,A>::ptr;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop;alloc::vec::Vec<T,A>::as_mut_ptr;alloc::raw_vec::RawVec<T,A>::ptr;core::ptr::unique::Unique<T>::as_ptr 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop;alloc::vec::Vec<T,A>::as_mut_ptr;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop;alloc::vec::Vec<T,A>::as_mut_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k];schedule_[k];__sched_text_start_[k];finish_task_switch_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop;core::ptr::slice_from_raw_parts_mut 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop;core::ptr::slice_from_raw_parts_mut;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;<alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop;core::ptr::slice_from_raw_parts_mut;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k];schedule_[k];__sched_text_start_[k];finish_task_switch_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>> 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc;__GI___libc_free 10
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc;__GI___libc_free;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc;__GI___libc_free;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k];schedule_[k];__sched_text_start_[k];finish_task_switch_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc;_int_free 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc;_int_free;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc;_int_free;tcache_put 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc;_int_free;tcache_put;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc;core::alloc::layout::Layout::align 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc;core::alloc::layout::Layout::align;core::num::nonzero::NonZeroUsize::get 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc;core::alloc::layout::Layout::size 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;alloc::alloc::dealloc;core::alloc::layout::Layout::size;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;<alloc::alloc::Global as core::alloc::Allocator>::deallocate;core::ptr::non_null::NonNull<T>::as_ptr 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory 12
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;<T as core::convert::Into<U>>::into 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;<T as core::convert::Into<U>>::into;<core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;<T as core::convert::Into<U>>::into;<core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;<T as core::convert::Into<U>>::into;<core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from;core::ptr::unique::Unique<T>::as_ptr 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;core::alloc::layout::Layout::from_size_align_unchecked 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;core::alloc::layout::Layout::from_size_align_unchecked;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;core::alloc::layout::Layout::from_size_align_unchecked;core::num::nonzero::NonZeroUsize::new_unchecked 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;core::alloc::layout::Layout::from_size_align_unchecked;core::num::nonzero::NonZeroUsize::new_unchecked;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;core::mem::align_of 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;core::mem::align_of;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k];schedule_[k];__sched_text_start_[k];finish_task_switch_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;core::ptr::unique::Unique<T>::cast 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;core::ptr::unique::Unique<T>::cast;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;core::ptr::unique::Unique<T>::cast;core::ptr::unique::Unique<T>::new_unchecked 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;alloc::raw_vec::RawVec<T,A>::current_memory;core::ptr::unique::Unique<T>::cast;core::ptr::unique::Unique<T>::new_unchecked;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::ptr::drop_in_place<alloc::string::String>;core::ptr::drop_in_place<alloc::vec::Vec<u8>>;core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::result::Result<T,E>::expect 20
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::result::Result<T,E>::expect;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::str::<impl str>::parse 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::str::<impl str>::parse;core::num::<impl core::str::traits::FromStr for u32>::from_str 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::str::<impl str>::parse;core::num::<impl core::str::traits::FromStr for u32>::from_str;core::num::from_str_radix 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::str::<impl str>::parse;core::num::<impl core::str::traits::FromStr for u32>::from_str;core::num::from_str_radix;<u32 as core::num::FromStrRadixHelper>::checked_add;core::num::<impl u32>::checked_add;core::num::<impl u32>::overflowing_add 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::str::<impl str>::parse;core::num::<impl core::str::traits::FromStr for u32>::from_str;core::num::from_str_radix;<u32 as core::num::FromStrRadixHelper>::checked_add;core::num::<impl u32>::checked_add;core::num::<impl u32>::overflowing_add;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::str::<impl str>::parse;core::num::<impl core::str::traits::FromStr for u32>::from_str;core::num::from_str_radix;<u32 as core::num::FromStrRadixHelper>::checked_mul;core::num::<impl u32>::checked_mul;core::num::<impl u32>::overflowing_mul 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::str::<impl str>::parse;core::num::<impl core::str::traits::FromStr for u32>::from_str;core::num::from_str_radix;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k];schedule_[k];__sched_text_start_[k];finish_task_switch_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::str::<impl str>::parse;core::num::<impl core::str::traits::FromStr for u32>::from_str;core::num::from_str_radix;core::char::methods::<impl char>::to_digit 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::sync::atomic::AtomicU32::fetch_add 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::sync::atomic::AtomicU32::fetch_add;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::sync::atomic::AtomicU32::fetch_add;core::cell::UnsafeCell<T>::get 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::sync::atomic::AtomicU32::fetch_add;core::sync::atomic::atomic_add 13
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};core::sync::atomic::AtomicU32::fetch_add;core::sync::atomic::atomic_add;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string 10
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr;alloc::raw_vec::RawVec<T,A>::ptr 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;alloc::vec::Vec<T,A>::as_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null;core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;<alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref;core::slice::raw::from_raw_parts 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;core::ptr::const_ptr::<impl *const T>::add 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;core::ptr::const_ptr::<impl *const T>::add;core::ptr::const_ptr::<impl *const T>::offset 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;core::ptr::const_ptr::<impl *const T>::add;core::ptr::const_ptr::<impl *const T>::offset;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;core::ptr::const_ptr::<impl *const [T]>::as_ptr;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;core::ptr::slice_from_raw_parts 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;core::ptr::const_ptr::<impl *const [T]>::len;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;alloc::string::String::as_mut_vec 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;alloc::string::String::len;alloc::vec::Vec<T,A>::len 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;core::ptr::drop_in_place<std::io::Guard> 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;core::ptr::drop_in_place<std::io::Guard>;<std::io::Guard as core::ops::drop::Drop>::drop 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;core::result::Result<T,E>::is_err 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;core::str::converts::from_utf8 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;core::str::converts::from_utf8;core::str::validations::run_utf8_validation 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}} 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation 21
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;<alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;<alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut;alloc::vec::Vec<T,A>::as_mut_ptr 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;<alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut;alloc::vec::Vec<T,A>::as_mut_ptr;alloc::raw_vec::RawVec<T,A>::ptr 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;<alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut;alloc::vec::Vec<T,A>::as_mut_ptr;alloc::raw_vec::RawVec<T,A>::ptr;core::ptr::unique::Unique<T>::as_ptr 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;<alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut;alloc::vec::Vec<T,A>::as_mut_ptr;alloc::raw_vec::RawVec<T,A>::ptr;core::ptr::unique::Unique<T>::as_ptr;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;<alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut;alloc::vec::Vec<T,A>::as_mut_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;<alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut;alloc::vec::Vec<T,A>::as_mut_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;<alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut;alloc::vec::Vec<T,A>::as_mut_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null;core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;<alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut;alloc::vec::Vec<T,A>::as_mut_ptr;core::ptr::mut_ptr::<impl *mut T>::is_null;core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;<alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;<alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut;core::slice::raw::from_raw_parts_mut;core::ptr::slice_from_raw_parts_mut 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut 11
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut;core::ptr::mut_ptr::<impl *mut T>::add 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut;core::ptr::mut_ptr::<impl *mut T>::add;core::ptr::mut_ptr::<impl *mut T>::offset 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut;core::ptr::mut_ptr::<impl *mut [T]>::as_mut_ptr 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut;core::ptr::slice_from_raw_parts_mut 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut;core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut;core::slice::<impl [T]>::len 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read 203
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;__pthread_disable_asynccancel 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;__pthread_disable_asynccancel;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;__pthread_enable_asynccancel 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;__pthread_enable_asynccancel;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 20
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];__x64_sys_read_[k] 12
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k] 92
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];__fdget_pos_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];fput_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k] 9
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];__fdget_pos_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];__fdget_pos_[k];__fget_light_[k];__fget_files_[k] 25
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];__fdget_pos_[k];_cond_resched_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];__fdget_pos_[k];mutex_lock_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];__fdget_pos_[k];mutex_lock_[k];_cond_resched_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];__fget_light_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];fput_many_[k] 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];fsnotify_parent_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];mutex_lock_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k];run_timer_softirq_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];mutex_unlock_[k] 10
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k] 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];dput_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];ext4_file_read_iter_[k] 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];fsnotify_parent_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];fsnotify_parent_[k];dget_parent_[k];lockref_get_not_zero_[k] 9
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];fsnotify_parent_[k];dput_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];fsnotify_parent_[k];dput_[k];_cond_resched_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];fsnotify_parent_[k];lockref_put_return_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];iov_iter_init_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k] 11
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k] 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_buffered_read_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];_cond_resched_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];copy_page_to_iter_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k] 39
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];__sb_end_write_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];_cond_resched_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];_cond_resched_[k];preempt_schedule_common_[k];__sched_text_start_[k];finish_task_switch_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];copy_page_to_iter_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];copy_page_to_iter_[k];_cond_resched_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];copy_page_to_iter_[k];copy_user_generic_string_[k] 10
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];mark_page_accessed_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];pagecache_get_page_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];pagecache_get_page_[k];PageHuge_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];pagecache_get_page_[k];find_get_entry_[k] 23
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];pagecache_get_page_[k];find_get_entry_[k];PageHuge_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];pagecache_get_page_[k];find_get_entry_[k];xas_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];pagecache_get_page_[k];xas_load_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];atime_needs_update_[k] 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];atime_needs_update_[k];current_time_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];atime_needs_update_[k];current_time_[k];ktime_get_coarse_real_ts64_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];atime_needs_update_[k];current_time_[k];timestamp_truncate_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];atime_needs_update_[k];ktime_get_coarse_real_ts64_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];current_time_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];_raw_read_lock_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];kmem_cache_alloc_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];memcg_kmem_put_cache_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];memset_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];start_this_handle_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];start_this_handle_[k];add_transaction_credits_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_stop_[k];jbd2_journal_stop_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_stop_[k];jbd2_journal_stop_[k];kmem_cache_free_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_stop_[k];jbd2_journal_stop_[k];stop_this_handle_[k];__wake_up_[k];__wake_up_common_lock_[k];__lock_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];__ext4_get_inode_loc_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];__brelse_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];_raw_spin_lock_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k];ext4_inode_csum_set_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k];ext4_inode_csum_set_[k];ext4_inode_csum.isra.0_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k];ext4_inode_csum_set_[k];ext4_inode_csum.isra.0_[k];crypto_shash_update_[k];crc32c_pcl_intel_update_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_reserve_inode_write_[k];__ext4_get_inode_loc_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_reserve_inode_write_[k];__ext4_get_inode_loc_[k];__getblk_gfp_[k];__find_get_block_[k];mark_page_accessed_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_reserve_inode_write_[k];__ext4_get_inode_loc_[k];ext4_get_group_desc_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];ext4_file_read_iter_[k];generic_file_read_iter_[k];generic_file_buffered_read_[k];touch_atime_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_reserve_inode_write_[k];ext4_inode_table_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];new_sync_read_[k];generic_file_read_iter_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];__x86_retpoline_rax_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];apparmor_file_permission_[k] 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k];apparmor_file_permission_[k];aa_file_perm_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k];apparmor_file_permission_[k];common_file_perm_[k] 23
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k];apparmor_file_permission_[k];common_file_perm_[k];aa_file_perm_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k];common_file_perm_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k];dget_parent_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k];dput_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k];fsnotify_[k] 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k];fsnotify_parent_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k];fsnotify_parent_[k];dget_parent_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k];fsnotify_parent_[k];dget_parent_[k];lockref_get_not_zero_[k] 10
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k];fsnotify_parent_[k];dput_[k];_cond_resched_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];ksys_read_[k];vfs_read_[k];rw_verify_area_[k];security_file_permission_[k];fsnotify_parent_[k];lockref_put_return_[k] 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;<std::fs::File as std::io::Read>::read;std::sys::unix::fs::File::read;std::sys::unix::fd::FileDesc::read;__libc_read;__libc_read;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_read_[k];vfs_read_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::len 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;<core::result::Result<T,E> as core::ops::try::Try>::into_result 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::current_memory 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;alloc::raw_vec::RawVec<T,A>::capacity_from_bytes 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;alloc::raw_vec::RawVec<T,A>::capacity_from_bytes;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<T>::cast 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<T>::cast;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<T>::cast;core::ptr::non_null::NonNull<T>::as_ptr;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<T>::cast;core::ptr::non_null::NonNull<T>::new_unchecked 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<[T]>::len 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<[T]>::len;core::ptr::mut_ptr::<impl *mut [T]>::len 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::RawVec<T,A>::set_ptr;core::ptr::non_null::NonNull<[T]>::len;core::ptr::mut_ptr::<impl *mut [T]>::len;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl 11
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc;__GI___libc_malloc 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc;__GI___libc_malloc;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc;__GI___libc_malloc;tcache_get 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;alloc::alloc::alloc;core::alloc::layout::Layout::size 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::option::Option<T>::ok_or 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<T>::new 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<T>::new;core::ptr::mut_ptr::<impl *mut T>::is_null 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<T>::new;core::ptr::mut_ptr::<impl *mut T>::is_null;core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<T>::new;core::ptr::mut_ptr::<impl *mut T>::is_null;core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts;core::ptr::non_null::NonNull<T>::as_ptr 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;alloc::alloc::Global::alloc_impl;core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts;core::ptr::non_null::NonNull<T>::new_unchecked 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<alloc::alloc::Global as core::alloc::Allocator>::allocate;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;<core::result::Result<T,E> as core::ops::try::Try>::into_result 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;core::result::Result<T,E>::map_err 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;alloc::raw_vec::finish_grow;core::result::Result<T,E>::map_err;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;<core::result::Result<T,E> as core::ops::try::Try>::into_result 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::new 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::new;core::alloc::layout::Layout::from_size_align_unchecked 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::new;core::alloc::layout::Layout::from_size_align_unchecked;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::new;core::alloc::layout::Layout::from_size_align_unchecked;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k];schedule_[k];__sched_text_start_[k];finish_task_switch_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::align;core::num::nonzero::NonZeroUsize::get 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::from_size_align 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::from_size_align;core::num::<impl usize>::is_power_of_two;core::num::<impl usize>::count_ones 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::padding_needed_for 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::padding_needed_for;core::num::<impl usize>::wrapping_sub 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::result::Result<T,E>::unwrap 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::pad_to_align;core::result::Result<T,E>::unwrap;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;<core::result::Result<T,E> as core::ops::try::Try>::into_result 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::align 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::align;core::num::nonzero::NonZeroUsize::get 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::from_size_align_unchecked 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::from_size_align_unchecked;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::from_size_align_unchecked;core::num::nonzero::NonZeroUsize::new_unchecked 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::padding_needed_for 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::alloc::layout::Layout::padding_needed_for;core::num::<impl usize>::wrapping_add 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::num::<impl usize>::checked_mul 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::num::<impl usize>::checked_mul;core::num::<impl usize>::overflowing_mul 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::alloc::layout::Layout::array;core::alloc::layout::Layout::repeat;core::option::Option<T>::ok_or 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max;core::cmp::Ord::max 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max;core::cmp::Ord::max;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max;core::cmp::Ord::max;core::cmp::max_by 14
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max;core::cmp::Ord::max;core::cmp::max_by;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max;core::cmp::Ord::max;core::cmp::max_by;core::ops::function::FnOnce::call_once 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::cmp::max;core::cmp::Ord::max;core::cmp::max_by;core::ops::function::FnOnce::call_once;core::cmp::impls::<impl core::cmp::Ord for usize>::cmp 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::num::<impl usize>::checked_add 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::num::<impl usize>::checked_add;asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::num::<impl usize>::checked_add;core::num::<impl usize>::overflowing_add 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::option::Option<T>::ok_or 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::option::Option<T>::ok_or;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::needs_to_grow;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::reserve;alloc::raw_vec::RawVec<T,A>::reserve;alloc::raw_vec::handle_reserve 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::set_len 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;core::ptr::drop_in_place<std::io::Guard> 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;core::ptr::drop_in_place<std::io::Guard>;<std::io::Guard as core::ops::drop::Drop>::drop 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;core::ptr::drop_in_place<std::io::Guard>;<std::io::Guard as core::ops::drop::Drop>::drop;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;core::slice::<impl [T]>::len;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;std::io::Initializer::initialize 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;std::io::impls::<impl std::io::Read for &mut R>::initializer 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;std::io::impls::<impl std::io::Read for &mut R>::initializer;<std::fs::File as std::io::Read>::initializer;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;std::io::impls::<impl std::io::Read for &mut R>::initializer;<std::fs::File as std::io::Read>::initializer;std::io::Initializer::nop;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Read::read_to_string;std::io::append_to_string;std::io::Read::read_to_string::{{closure}};std::io::read_to_end;std::io::read_to_end_with_reservation;std::io::impls::<impl std::io::Read for &mut R>::initializer;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k];schedule_[k];__sched_text_start_[k];finish_task_switch_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write 145
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;__pthread_disable_asynccancel 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;__pthread_disable_asynccancel;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;__pthread_enable_asynccancel 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 41
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];__syscall_return_slowpath_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];__x64_sys_write_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];__x86_retpoline_rax_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k] 56
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__syscall_return_slowpath_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__syscall_return_slowpath_[k];__prepare_exit_to_usermode_[k];schedule_[k];__sched_text_start_[k];finish_task_switch_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];__f_unlock_pos_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];__fdget_pos_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];__fdget_pos_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];__fdget_pos_[k];__fget_light_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];__fdget_pos_[k];__fget_light_[k];__fget_files_[k] 14
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];__fdget_pos_[k];_cond_resched_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];__fdget_pos_[k];mutex_lock_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];__fget_light_[k] 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];__sb_end_write_[k] 12
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];fput_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];fput_many_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];fsnotify_parent_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];mutex_unlock_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k] 14
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];__sb_start_write_[k] 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];__x86_retpoline_rax_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];dget_parent_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];dput_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];ext4_file_write_iter_[k] 14
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_[k] 13
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];__srcu_read_lock_[k] 9
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];__srcu_read_unlock_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];__x86_retpoline_rax_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];_raw_spin_lock_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];dget_parent_[k];lockref_get_not_zero_[k] 10
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];dput_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];dput_[k];_cond_resched_[k];preempt_schedule_common_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];dput_[k];_cond_resched_[k];preempt_schedule_common_[k];__sched_text_start_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];dput_[k];_cond_resched_[k];preempt_schedule_common_[k];__sched_text_start_[k];finish_task_switch_[k] 245
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];dput_[k];_cond_resched_[k];preempt_schedule_common_[k];__sched_text_start_[k];finish_task_switch_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];dput_[k];_cond_resched_[k];preempt_schedule_common_[k];__sched_text_start_[k];finish_task_switch_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];dput_[k];rcu_all_qs_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k] 58
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];__kmalloc_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];__srcu_read_lock_[k] 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];__srcu_read_unlock_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];fsnotify_add_event_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];fsnotify_destroy_event_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k] 31
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k] 21
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];__slab_alloc_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];__slab_alloc_[k];___slab_alloc_[k];new_slab_[k];allocate_slab_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];__slab_alloc_[k];___slab_alloc_[k];new_slab_[k];allocate_slab_[k];alloc_slab_page_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];__slab_alloc_[k];___slab_alloc_[k];new_slab_[k];allocate_slab_[k];alloc_slab_page_[k];__memcg_kmem_charge_[k];try_charge_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];__slab_alloc_[k];___slab_alloc_[k];new_slab_[k];allocate_slab_[k];alloc_slab_page_[k];__memcg_kmem_charge_[k];try_charge_[k];page_counter_try_charge_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];__slab_alloc_[k];___slab_alloc_[k];new_slab_[k];allocate_slab_[k];alloc_slab_page_[k];__memcg_kmem_charge_[k];try_charge_[k];refill_stock_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];__slab_alloc_[k];___slab_alloc_[k];new_slab_[k];allocate_slab_[k];alloc_slab_page_[k];alloc_pages_current_[k];should_fail_alloc_page_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];_cond_resched_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];_cond_resched_[k];__sched_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];_cond_resched_[k];preempt_schedule_common_[k];__sched_text_start_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];_cond_resched_[k];preempt_schedule_common_[k];__sched_text_start_[k];finish_task_switch_[k] 245
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];_cond_resched_[k];preempt_schedule_common_[k];__sched_text_start_[k];finish_task_switch_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];_cond_resched_[k];preempt_schedule_common_[k];__sched_text_start_[k];finish_task_switch_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k];net_rx_action_[k];e1000_clean 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];_cond_resched_[k];preempt_schedule_common_[k];__sched_text_start_[k];finish_task_switch_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k];net_rx_action_[k];e1000_clean;napi_complete_done_[k];gro_normal_list.part.0_[k];netif_receive_skb_list_internal_[k];__netif_receive_skb_list_core_[k];ip_list_rcv_[k];ip_sublist_rcv_[k];ip_sublist_rcv_finish_[k];ip_local_deliver_[k];ip_local_deliver_finish_[k];ip_protocol_deliver_rcu_[k];tcp_v4_rcv_[k];tcp_v4_do_rcv_[k];tcp_rcv_established_[k];tcp_data_queue_[k];tcp_data_ready_[k];sock_def_readable_[k];__wake_up_sync_key_[k];__wake_up_common_lock_[k];__lock_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];kmalloc_slab_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];memcg_kmem_get_cache_[k] 27
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];preempt_schedule_common_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__kmalloc_[k];should_failslab_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__raw_callee_save___pv_queued_spin_unlock_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__wake_up_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];__x86_retpoline_r14_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];_raw_spin_lock_[k] 16
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_add_event_[k] 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_add_event_[k];__raw_callee_save___pv_queued_spin_unlock_[k] 17
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_add_event_[k];__wake_up_[k];__lock_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_add_event_[k];__wake_up_[k];__wake_up_common_lock_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_add_event_[k];__wake_up_[k];__wake_up_common_lock_[k];__lock_text_start_[k] 429
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_add_event_[k];__wake_up_[k];__wake_up_common_lock_[k];__lock_text_start_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_add_event_[k];__wake_up_[k];__wake_up_common_lock_[k];__lock_text_start_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_add_event_[k];_raw_spin_lock_[k];__pv_queued_spin_lock_slowpath_[k] 21
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_add_event_[k];inotify_merge_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_add_event_[k];strcmp_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_destroy_event_[k];__x86_retpoline_rax_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_destroy_event_[k];fsnotify_destroy_event.part.0_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_destroy_event_[k];fsnotify_destroy_event.part.0_[k];inotify_free_event_[k];kfree_[k] 18
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];fsnotify_destroy_event_[k];inotify_free_event_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];inotify_merge_[k] 18
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];kill_fasync_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];kmalloc_slab_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];memcg_kmem_put_cache_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];inotify_handle_event_[k];memset_[k] 16
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_[k];strcpy_[k] 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];fsnotify_compare_groups_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];inotify_handle_event_[k] 14
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];lockref_put_return_[k] 10
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];memcpy_[k] 10
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];take_dentry_name_snapshot_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];fsnotify_parent_[k];take_dentry_name_snapshot_[k];__raw_callee_save___pv_queued_spin_unlock_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];iov_iter_init_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k] 8
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_buffered_write_iter_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k] 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];down_write_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_da_write_begin_[k] 10
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_da_write_end_[k] 12
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_generic_write_checks_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];ext4_generic_write_checks_[k];generic_write_check_limits.isra.0_[k] 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];ext4_generic_write_checks_[k];generic_write_checks_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];__mnt_want_write_file_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_remove_privs_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];current_time_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];current_time_[k];ktime_get_coarse_real_ts64_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];_raw_read_lock_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];kmem_cache_alloc_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];memset_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_stop_[k];jbd2_journal_stop_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_stop_[k];jbd2_journal_stop_[k];stop_this_handle_[k];__wake_up_[k];__wake_up_common_lock_[k];__lock_text_start_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_journal_stop_[k];kmem_cache_free_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k];__ext4_handle_dirty_metadata_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k];__ext4_handle_dirty_metadata_[k];jbd2_journal_dirty_metadata_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k];ext4_inode_csum.isra.0_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k];ext4_inode_csum_set_[k];ext4_inode_csum.isra.0_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k];ext4_inode_csum_set_[k];ext4_inode_csum.isra.0_[k];crc32c_pcl_intel_update_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k];ext4_inode_csum_set_[k];ext4_inode_csum.isra.0_[k];crypto_shash_update_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k];ext4_inode_csum_set_[k];ext4_inode_csum.isra.0_[k];crypto_shash_update_[k];crc32c_pcl_intel_update_[k] 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_do_update_inode_[k];from_kgid_[k];map_id_up_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_mark_iloc_dirty_[k];ext4_inode_csum_set_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_reserve_inode_write_[k];__ext4_get_inode_loc_[k];__getblk_gfp_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_reserve_inode_write_[k];__ext4_get_inode_loc_[k];__getblk_gfp_[k];__find_get_block_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_reserve_inode_write_[k];__ext4_journal_get_write_access_[k];_cond_resched_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_reserve_inode_write_[k];ext4_inode_table_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];__ext4_mark_inode_dirty_[k];ext4_reserve_inode_write_[k];jbd2_journal_get_write_access_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];file_modified_[k];file_update_time_[k];update_time_[k];generic_update_time_[k];__mark_inode_dirty_[k];ext4_dirty_inode_[k];ext4_reserve_inode_write_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];ext4_write_checks_[k];generic_write_checks_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k] 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];balance_dirty_pages_ratelimited_[k] 10
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k] 17
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k];ext4_journal_check_start_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k];ext4_journal_check_start_[k];rcu_all_qs_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];_raw_read_lock_[k] 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];kmem_cache_alloc_[k] 12
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];kmem_cache_alloc_[k];_cond_resched_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];kmem_cache_alloc_[k];rcu_all_qs_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];memcg_kmem_put_cache_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];memset_[k] 15
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];start_this_handle_[k] 13
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k];jbd2__journal_start_[k];start_this_handle_[k];add_transaction_credits_[k] 13
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];__ext4_journal_start_sb_[k];start_this_handle_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];_cond_resched_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];_cond_resched_[k];preempt_schedule_common_[k];__sched_text_start_[k];finish_task_switch_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];ext4_block_write_begin_[k] 13
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];ext4_block_write_begin_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];do_softirq_own_stack_[k];asm_call_sysvec_on_stack_[k];__softirqentry_text_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];ext4_journal_check_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];ext4_nonda_switch_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];grab_cache_page_write_begin_[k];pagecache_get_page_[k] 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];grab_cache_page_write_begin_[k];pagecache_get_page_[k];find_get_entry_[k] 7
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];grab_cache_page_write_begin_[k];pagecache_get_page_[k];find_get_entry_[k];xas_load_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];grab_cache_page_write_begin_[k];wait_for_stable_page_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];jbd2__journal_start_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_begin_[k];pagecache_get_page_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k];__ext4_journal_stop_[k];jbd2_journal_stop_[k] 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k];__ext4_journal_stop_[k];jbd2_journal_stop_[k];kmem_cache_free_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k];__ext4_journal_stop_[k];jbd2_journal_stop_[k];stop_this_handle_[k] 10
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k];__ext4_journal_stop_[k];jbd2_journal_stop_[k];stop_this_handle_[k];__wake_up_[k];__wake_up_common_lock_[k];__lock_text_start_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k];__ext4_journal_stop_[k];jbd2_journal_stop_[k];stop_this_handle_[k];__wake_up_[k];__wake_up_common_lock_[k];_raw_spin_lock_irqsave_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k];generic_write_end_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k];generic_write_end_[k];__block_commit_write.isra.0_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k];generic_write_end_[k];block_write_end_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k];generic_write_end_[k];block_write_end_[k];__block_commit_write.isra.0_[k] 11
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k];generic_write_end_[k];block_write_end_[k];__block_commit_write.isra.0_[k];mark_buffer_dirty_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k];generic_write_end_[k];block_write_end_[k];mark_buffer_dirty_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_da_write_end_[k];unlock_page_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];ext4_nonda_switch_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];grab_cache_page_write_begin_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];iov_iter_advance_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];iov_iter_copy_from_user_atomic_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];iov_iter_copy_from_user_atomic_[k];copy_user_generic_string_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];iov_iter_fault_in_readable_[k] 5
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];generic_perform_write_[k];unlock_page_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_buffered_write_iter_[k];iov_iter_copy_from_user_atomic_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];ext4_write_checks_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];new_sync_write_[k];ext4_file_write_iter_[k];up_write_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];release_dentry_name_snapshot_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];rw_verify_area_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];rw_verify_area_[k];__x86_retpoline_rax_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];rw_verify_area_[k];apparmor_file_permission_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_write_[k];ksys_write_[k];vfs_write_[k];rw_verify_area_[k];security_file_permission_[k];apparmor_file_permission_[k];common_file_perm_[k] 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;__libc_write;__libc_write;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];ksys_write_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;std::sys::unix::cvt;<isize as std::sys::unix::IsMinusOne>::is_minus_one 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;<std::fs::File as std::io::Write>::write;std::sys::unix::fs::File::write;std::sys::unix::fd::FileDesc::write;std::sys::unix::cvt;<isize as std::sys::unix::IsMinusOne>::is_minus_one;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::<impl [T]>::is_empty 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::<impl [T]>::is_empty;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::<impl [T]>::is_empty;core::slice::<impl [T]>::len 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::<impl [T]>::is_empty;core::slice::<impl [T]>::len;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked 4
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;core::ptr::const_ptr::<impl *const T>::add 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;core::ptr::const_ptr::<impl *const T>::add;core::ptr::const_ptr::<impl *const T>::offset;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;core::ptr::slice_from_raw_parts 3
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 6
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;core::slice::<impl [T]>::len 1
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index;core::slice::<impl [T]>::len;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 2
thread_perf;__GI___clone;start_thread;std::sys::unix::thread::Thread::new::thread_start;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once;core::ops::function::FnOnce::call_once{{vtable-shim}};std::thread::Builder::spawn_unchecked::{{closure}};std::panic::catch_unwind;std::panicking::try;__rust_try;std::panicking::try::do_call;<std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<;std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}};std::sys_common::backtrace::__rust_begin_short_backtrace;threadpool::spawn_in_pool::{{closure}};<F as threadpool::FnBox>::call_box;perf_test::thread::{{closure}};std::io::Write::write_all;core::slice::index::<impl core::ops::index::Index<I> for [T]>::index;asm_sysvec_call_function_single_[k];sysvec_call_function_single_[k];idtentry_exit_cond_rcu_[k];__noinstr_text_start_[k];__prepare_exit_to_usermode_[k] 1
thread_perf;alloc::raw_vec::RawVec<T,A>::grow_amortized;core::option::Option<T>::ok_or 1
thread_perf;alloc::raw_vec::RawVec<T,A>::try_reserve;alloc::raw_vec::RawVec<T,A>::needs_to_grow 1
thread_perf;alloc::vec::Vec<T,A>::append_elements;alloc::vec::Vec<T,A>::as_mut_ptr 1
thread_perf;core::alloc::layout::Layout::align;core::num::nonzero::NonZeroUsize::get 1
thread_perf;core::alloc::layout::Layout::from_size_align;core::num::<impl usize>::is_power_of_two 1
thread_perf;core::alloc::layout::Layout::pad_to_align;core::alloc::layout::Layout::size 1
thread_perf;core::alloc::layout::Layout::repeat;core::option::Option<T>::ok_or 1
thread_perf;core::cmp::max;core::cmp::Ord::max 1
thread_perf;core::ptr::unique::Unique<T>::cast;core::ptr::unique::Unique<T>::as_ptr 1
thread_perf;core::slice::<impl [T]>::iter;core::slice::iter::Iter<T>::new 1
thread_perf;core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut;<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut 1
thread_perf;core::sync::atomic::AtomicU32::fetch_add;core::cell::UnsafeCell<T>::get 2
thread_perf;perf_test::thread::{{closure}};<T as alloc::string::ToString>::to_string 1
thread_perf;perf_test::thread::{{closure}};<alloc::string::String as core::ops::deref::Deref>::deref 1
thread_perf;std::io::append_to_string;<alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index 1
thread_perf;std::io::read_to_end_with_reservation;<alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut 2
thread_perf;std::io::read_to_end_with_reservation;alloc::vec::Vec<T,A>::len 1
